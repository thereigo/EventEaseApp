@using global::EventEaseApp.Models
@using global::EventEaseApp.Logging
@rendermode InteractiveServer
@inject ILoggingService LoggingService // Inject the logging service

<div class="event-card">
    <h3>@Event?.Name</h3>
    <p>@Event?.Date.ToString("MMMM dd, yyyy")</p>
    <p>@Event?.Location</p>
    <p>Attendance: @AttendanceCount</p>
    <div class="event-card-links">
        <a href="/events/@Event?.Name">Details</a>
        <a href="/register/@Event?.Name">Register</a>
    </div>
</div>

@code {
    [Parameter]
    public EventModel? Event { get; set; }

    [Parameter]
    public int AttendanceCount { get; set; }

    protected override void OnParametersSet()
    {
        try
        {
            if (Event != null)
            {
                AttendanceCount = GetAttendanceCount(Event.Name);
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            LoggingService.LogException(ex, $"Error setting parameters for EventCard with Event Name: {Event?.Name}");
        }
    }

    private int GetAttendanceCount(string? eventName)
    {
        try
        {
            Random random = new Random();
            int randomViewers = random.Next(0, 10); // Generates a random number between 0 and 9
            return Math.Max(Event?.RegisteredParticipants ?? 0, (Event?.RegisteredParticipants ?? 0) + randomViewers);
        }
        catch (Exception ex)
        {
            LoggingService.LogException(ex, $"Error getting attendance count for Event Name: {eventName}");
            return 0; // Return a default value in case of an error
        }
    }
}

<style>
    .event-card {
        background-color: #ffffff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 16px;
        margin: 16px 0;
        transition: transform 0.2s;
        max-width: 30vw;
    }

    .event-card:hover {
        transform: translateY(-4px);
    }

    .event-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 8px;
    }

    .event-card h3 {
        margin-top: 0;
        font-size: 1.2em;
        color: #333333;
    }

    .event-card p {
        margin: 8px 0;
        color: #666666;
    }

    .event-card-links {
        display: flex;
        justify-content: space-around;
        margin-top: 16px;
    }

    .event-card-links a {
        text-decoration: none;
        color: #ffffff;
        background-color: #007bff;
        padding: 8px 16px;
        border-radius: 4px;
        transition: background-color 0.2s;
    }

    .event-card-links a:hover {
        background-color: #0056b3;
    }
</style>
